{"version":3,"sources":["Components/Preview/Preview.js","Components/App/App.js","index.js"],"names":["Preview","props","ref","React","createRef","className","generalInfo","firstName","lastName","role","location","number","email","education","map","item","index","Row","Col","university","city","degree","subject","from","to","experience","company","targetRef","filename","toPdf","Button","variant","onClick","App","useState","setGeneralInfo","setEducation","setExperience","handleInputChangeGen","e","values","target","name","value","handleInputChangeEdu","handleInputChangeExp","Form","Control","type","placeholder","onChange","phone","console","log","splice","handleDeleteFieldsEdu","push","handleAddFieldsEdu","handleDeleteFieldsExp","handleAddFieldsExp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.014eefc5.chunk.js","sourcesContent":["import React from 'react';\nimport {Row,Col,Button} from 'react-bootstrap';\nimport './Preview.css';\nimport Pdf from \"react-to-pdf\";\n\nfunction Preview(props) {\n\n    const ref = React.createRef();\n\n    return (\n        <div className=\"preview\">\n            <div  ref={ref} >\n                <div className=\"\">\n                <div className=\"large bold\">\n                    <h2>{props.generalInfo[0].firstName} {props.generalInfo[0].lastName}</h2>  \n                </div>\n                <p className=\"preview-role\">\n                    {props.generalInfo[0].role}  \n                </p>\n                <p className=\"preview-location\">\n                    {props.generalInfo[0].location}  \n                </p>\n                <p className=\"preview-phone\">\n                    {props.generalInfo[0].number}    \n                </p>\n                <p className=\"preview-email\">\n                    {props.generalInfo[0].email}  \n                </p>\n            </div>\n                <hr />\n                <div className=\"preview-heading\">\n                <h3>Education</h3> \n                </div>\n                <div className=\"education\">\n                {props.education.map((item,index)=>{\n                        return ( \n                            <div>\n                                <Row className=\"preview-row\"> \n                                <Col>\n                                <p className=\"large bold\" key= {index}>{item.university} , {item.city}</p>\n                                <p className=\"\" key= {index}></p>\n                                <p className=\"\" key= {index}>Degree- {item.degree}</p>\n                                <p className=\"\" key= {index}>Subject- {item.subject}</p>\n                                </Col>\n                                <Col className=\"right\">\n                                <p className=\"\" key= {index}>{item.from} - {item.to}</p>\n                                </Col>\n                                <hr />\n                                </Row>\n                            </div>\n                        )\n                    })}\n            </div>\n            \n                <div className=\"experience\">\n                <div className=\"preview-heading\">\n                    <h3>Experience</h3> \n                </div>\n                {props.experience.map((item,index)=>{\n                        return ( \n                            <div>\n                                <Row className=\"preview-row\">\n                                    <Col>\n                                        <p className= \"large bold\" key= {index}>{item.role}</p>\n                                        <p key= {index}>{item.company} , {item.city}</p>                                        \n                                    </Col>\n                                    <Col className=\"right\">\n                                            <p key= {index}>{item.from}-{item.to}</p>\n                                    </Col>\n                                </Row>\n                                <hr />\n                            </div>\n                        )\n                    })}\n            </div>\n            </div >\n            <div >\n                <Pdf targetRef={ref} className=\"preview-elem\" filename=\"Resume.pdf\">\n                {({ toPdf }) => <Button variant=\"danger\" onClick={toPdf}>Generate Pdf</Button>}\n            </Pdf>\n            </div>\n        </div>\n        )\n}\n\nexport default Preview\n","import './App.css';\nimport {Form,Row,Col,Button} from 'react-bootstrap';\nimport { useState , Fragment} from 'react';\nimport Preview from '../Preview/Preview';\n\n\n\nfunction App() {\n  const [generalInfo, setGeneralInfo] =  useState([{firstName:\"\", lastName:\"\", role:\"\", email:\"\", number:\"\", location:\"\"}]);\n  const [education, setEducation] = useState([{university:\"\", degree: \"\", subject: \"\", city: \"\", from:\"\", to:\"\"}]);\n  const [experience, setExperience] = useState([{company:\"\", role: \"\", city: \"\", from:\"\", to:\"\"}]);\n\n  const handleInputChangeGen = (index, e) =>{\n    const values = [...generalInfo];\n        if (e.target.name === \"firstname\") {\n          values[index].firstName = e.target.value;\n        } \n        else if (e.target.name === \"lastname\") {\n            values[index].lastName = e.target.value;\n          } \n          else if (e.target.name === \"role\") {\n            values[index].role = e.target.value;\n          } \n          else if (e.target.name === \"email\") {\n            values[index].email = e.target.value;\n          }\n          else if (e.target.name === \"number\") {\n            values[index].number = e.target.value;\n          }    \n        else {\n          values[index].location = e.target.value;\n        }\n    \n        setGeneralInfo(values);\n  }\n\n\n    const handleInputChangeEdu = (index,e) => {\n        const values = [...education];\n        if (e.target.name === \"university\") {\n          values[index].university = e.target.value;\n        } \n        else if (e.target.name === \"city\") {\n            values[index].city = e.target.value;\n          } \n          else if (e.target.name === \"degree\") {\n            values[index].degree = e.target.value;\n          } \n          else if (e.target.name === \"subject\") {\n            values[index].subject = e.target.value;\n          }\n          else if (e.target.name === \"from\") {\n            values[index].from = e.target.value;\n          }    \n        else {\n          values[index].to = e.target.value;\n        }\n    \n        setEducation(values);\n    }\n\n    const handleInputChangeExp = (index,e) => {\n      const values = [...experience];\n      if (e.target.name === \"company\") {\n        values[index].company = e.target.value;\n      } \n      else if (e.target.name === \"city\") {\n          values[index].city = e.target.value;\n        } \n        else if (e.target.name === \"role\") {\n          values[index].role = e.target.value;\n        } \n        else if (e.target.name === \"from\") {\n          values[index].from = e.target.value;\n        }    \n      else {\n        values[index].to = e.target.value;\n      }\n  \n      setExperience(values);\n  }\n    const handleAddFieldsExp = (e) =>{\n        let value = [...experience];\n        value.push({company:\"\", role: \"\", city: \"\", from:\"\", to:\"\"});\n        setExperience(value);\n    }\n\n    const handleDeleteFieldsExp = (e, index) =>{\n        console.log(index);\n        const value = [...experience];\n        value.splice(index,1);\n        setExperience(value);\n    }\n    const handleAddFieldsEdu = (e) =>{\n      let value = [...education];\n      value.push({university:\"\", degree: \"\", subject: \"\", city: \"\", from:\"\", to:\"\"});\n      setEducation(value);\n  }\n\n  const handleDeleteFieldsEdu = (e, index) =>{\n      console.log(index);\n      const value = [...education];\n      if(index !== 0)\n      value.splice(index,1);\n      setEducation(value);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"component-container\">\n          <div className=\"form-container\">\n            <h1 className=\"heading\"> General Information </h1>\n            <Form>\n              {\n                  generalInfo.map((item,index)=> {\n                    return(\n                    <Fragment key={`${item}~${index}`}>\n      \n                        <Row>\n                          <Col>\n                            <Form.Control\n                                type=\"text\" \n                                name=\"firstname\"\n                                placeholder=\"First name\" \n                                value={item.firstName}  \n                                onChange = { e =>  handleInputChangeGen(index,e)}\n                                className=\"input\"\n                                />\n                          </Col>\n                      \n                          <Col>\n                            <Form.Control\n                                type=\"text\" \n                                name=\"lastname\"\n                                placeholder=\"Last name\" \n                                value={item.lastName}  \n                                onChange = { e =>  handleInputChangeGen(index,e)}\n                                className=\"input\"\n                                />\n                          </Col>\n                        </Row>\n                        <Row>\n                          <Form.Control\n                              type=\"text\" \n                              name=\"role\"\n                              placeholder=\"Role\" \n                              value={item.role}  \n                              onChange = { e =>  handleInputChangeGen(index,e)}\n                              className=\"input\"\n                              />\n                        </Row>\n                        <Row>\n                          <Form.Control\n                              type=\"email\" \n                              name=\"email\"\n                              placeholder=\"Email\" \n                              value={item.email}\n                              onChange = { e =>  handleInputChangeGen(index,e)}\n                              className=\"input\"\n                              />\n                        </Row>\n                        <Row>\n                          <Col>\n                            <Form.Control\n                                type=\"tel\" \n                                name=\"number\"\n                                placeholder=\"Phone\" \n                                value={item.phone} \n                                onChange = { e =>  handleInputChangeGen(index,e)} \n                                className=\"input\"\n                                />\n                          </Col>\n\n                          <Col>\n                            <Form.Control\n                                type=\"text\" \n                                name=\"location\"\n                                placeholder=\"Location\" \n                                value={item.location}  \n                                onChange = { e =>  handleInputChangeGen(index,e)}\n                                className=\"input\"\n                                />\n                          </Col>\n                        </Row>\n                    </Fragment>\n                  );\n                })\n              }\n            </Form>\n            </div>\n        \n            <div className=\"form-container\">\n                <h1 className=\"heading\"> Education </h1>\n                <Form>\n                  {\n                      education.map((item,index)=> {\n                        return (\n                        <Fragment className=\"education-fragment\" key={`${item}~${index}`}>\n                            <Row>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"university\"\n                                  placeholder=\"University\" \n                                  value={item.university}  \n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Row>\n                            <Row>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"city\"\n                                  placeholder=\"City\" \n                                  value={item.city}  \n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Row>\n                            <Row>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"degree\"\n                                  placeholder=\"Degree\" \n                                  value={item.degree}  \n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Row>\n                            <Row>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"subject\"\n                                  placeholder=\"Subject\" \n                                  value={item.subject}\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Row>\n                            <Row>\n                                <Col>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"from\"\n                                  placeholder=\"From\" \n                                  value={item.from} \n                                  onChange = { e =>  handleInputChangeEdu(index,e)} \n                                  className=\"input\"\n                                  />\n                                  </Col>\n                                  <Col>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"to\"\n                                  placeholder=\"To\" \n                                  value={item.to}  \n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Col>\n                            </Row>\n                            <Button variant=\"danger\" onClick={() => handleDeleteFieldsEdu(index)}>Delete</Button>\n                        </Fragment>\n                      );\n                      })\n                  }\n                </Form>\n                <Button onClick={() => handleAddFieldsEdu()}>Add</Button>\n            </div>\n        <div className=\"form-container\">\n          <h1 className=\"heading\"> Experience </h1>\n                <Form>\n                  {\n                      experience.map((item,index)=> (\n                        <Fragment key={`${item}~${index}`}>\n                            <Row>\n                              <Col>\n                                <Form.Control\n                                    type=\"text\" \n                                    name=\"company\"\n                                    placeholder=\"Company\" \n                                    value={item.company}  \n                                    onChange = { e =>  handleInputChangeExp(index,e)}\n                                    className=\"input\"\n                                    />\n                              </Col>\n                          \n                              <Col>\n                                <Form.Control\n                                    type=\"text\" \n                                    name=\"role\"\n                                    placeholder=\"Role\" \n                                    value={item.role}  \n                                    onChange = { e =>  handleInputChangeExp(index,e)}\n                                    className=\"input\"\n                                    />\n                              </Col>\n                            </Row>\n                            <Row>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"city\"\n                                  placeholder=\"City\" \n                                  value={item.city}  \n                                  onChange = { e =>  handleInputChangeExp(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Row>\n                            <Row>\n                                <Col>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"from\"\n                                  placeholder=\"From\" \n                                  value={item.from} \n                                  onChange = { e =>  handleInputChangeExp(index,e)} \n                                  className=\"input\"\n                                  />\n                                  </Col>\n                                  <Col>\n                              <Form.Control\n                                  type=\"text\" \n                                  name=\"to\"\n                                  placeholder=\"To\" \n                                  value={item.to}  \n                                  onChange = { e =>  handleInputChangeExp(index,e)}\n                                  className=\"input\"\n                                  />\n                            </Col>\n                            </Row>\n                            <Button variant=\"danger\" onClick={() => handleDeleteFieldsExp(index)}>Delete</Button>\n                        </Fragment>\n                      ))\n                  }\n                </Form>\n            <Button onClick={() => handleAddFieldsExp()}>Add</Button>\n            </div>\n        </div>\n    <div className=\"preview-container\">\n      <Preview generalInfo = {generalInfo} education = {education} experience = {experience}/>\n    </div>\n</div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}