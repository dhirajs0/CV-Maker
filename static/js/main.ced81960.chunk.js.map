{"version":3,"sources":["Components/Preview/Preview.js","Components/App/App.js","index.js"],"names":["Preview","props","ref","React","createRef","className","generalInfo","firstName","lastName","role","location","number","email","education","map","item","index","Row","Col","university","city","degree","subject","from","to","experience","company","targetRef","size","orientation","filename","toPdf","Button","variant","onClick","App","useState","setGeneralInfo","setEducation","setExperience","handleInputChangeGen","e","values","target","name","value","handleInputChangeEdu","handleInputChangeExp","Form","Control","type","placeholder","onChange","phone","console","log","splice","handleDeleteFieldsEdu","push","handleAddFieldsEdu","handleDeleteFieldsExp","handleAddFieldsExp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ced81960.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Row,Col,Button} from 'react-bootstrap';\r\nimport './Preview.css';\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nfunction Preview(props) {\r\n\r\n    const ref = React.createRef();\r\n\r\n    return (\r\n        <div className=\"preview\">\r\n            <div  ref={ref}>\r\n                <div className=\"\">\r\n                <div className=\"large bold\">\r\n                    <h2>{props.generalInfo[0].firstName} {props.generalInfo[0].lastName}</h2>  \r\n                </div>\r\n                <p className=\"preview-role\">\r\n                    {props.generalInfo[0].role}  \r\n                </p>\r\n                <p className=\"preview-location\">\r\n                    {props.generalInfo[0].location}  \r\n                </p>\r\n                <p className=\"preview-phone\">\r\n                    {props.generalInfo[0].number}    \r\n                </p>\r\n                <p className=\"preview-email\">\r\n                    {props.generalInfo[0].email}  \r\n                </p>\r\n            </div>\r\n                <hr />\r\n                <div className=\"preview-heading\">\r\n                <h3>Education</h3> \r\n            </div>\r\n                <div className=\"education\">\r\n                {props.education.map((item,index)=>{\r\n                        return ( \r\n                            <div>\r\n                                <Row className=\"preview-row\"> \r\n                                <Col>\r\n                                <p className=\"large bold\" key= {index}>{item.university} , {item.city}</p>\r\n                                <p className=\"\" key= {index}></p>\r\n                                <p className=\"\" key= {index}>Degree- {item.degree}</p>\r\n                                <p className=\"\" key= {index}>Subject- {item.subject}</p>\r\n                                </Col>\r\n                                <Col className=\"right\">\r\n                                <p className=\"\" key= {index}>{item.from} - {item.to}</p>\r\n                                </Col>\r\n                                <hr />\r\n                                </Row>\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n            \r\n                <div className=\"experience\">\r\n                <div className=\"preview-heading\">\r\n                    <h3>Experience</h3> \r\n                </div>\r\n                {props.experience.map((item,index)=>{\r\n                        return ( \r\n                            <div>\r\n                                <Row className=\"preview-row\">\r\n                                    <Col>\r\n                                        <p className= \"large bold\" key= {index}>{item.role}</p>\r\n                                        <p key= {index}>{item.company} , {item.city}</p>                                        \r\n                                    </Col>\r\n                                    <Col className=\"right\">\r\n                                            <p key= {index}>{item.from}-{item.to}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <hr />\r\n                            </div>\r\n                        )\r\n                    })}\r\n            </div>\r\n            </div>\r\n                <Pdf targetRef={ref} size=\"A4\" orientation=\"landscape\" filename=\"Resume.pdf\">\r\n                {({ toPdf }) => <Button variant=\"danger\" onClick={toPdf}>Generate Pdf</Button>}\r\n            </Pdf>\r\n        </div>\r\n        )\r\n}\r\n\r\nexport default Preview\r\n","import './App.css';\r\nimport {Form,Row,Col,Button} from 'react-bootstrap';\r\nimport { useState , Fragment} from 'react';\r\nimport Preview from '../Preview/Preview';\r\n\r\n\r\n\r\nfunction App() {\r\n  const [generalInfo, setGeneralInfo] =  useState([{firstName:\"\", lastName:\"\", role:\"\", email:\"\", number:\"\", location:\"\"}]);\r\n  const [education, setEducation] = useState([{university:\"\", degree: \"\", subject: \"\", city: \"\", from:\"\", to:\"\"}]);\r\n  const [experience, setExperience] = useState([{company:\"\", role: \"\", city: \"\", from:\"\", to:\"\"}]);\r\n\r\n  const handleInputChangeGen = (index, e) =>{\r\n    const values = [...generalInfo];\r\n        if (e.target.name === \"firstname\") {\r\n          values[index].firstName = e.target.value;\r\n        } \r\n        else if (e.target.name === \"lastname\") {\r\n            values[index].lastName = e.target.value;\r\n          } \r\n          else if (e.target.name === \"role\") {\r\n            values[index].role = e.target.value;\r\n          } \r\n          else if (e.target.name === \"email\") {\r\n            values[index].email = e.target.value;\r\n          }\r\n          else if (e.target.name === \"number\") {\r\n            values[index].number = e.target.value;\r\n          }    \r\n        else {\r\n          values[index].location = e.target.value;\r\n        }\r\n    \r\n        setGeneralInfo(values);\r\n  }\r\n\r\n\r\n    const handleInputChangeEdu = (index,e) => {\r\n        const values = [...education];\r\n        if (e.target.name === \"university\") {\r\n          values[index].university = e.target.value;\r\n        } \r\n        else if (e.target.name === \"city\") {\r\n            values[index].city = e.target.value;\r\n          } \r\n          else if (e.target.name === \"degree\") {\r\n            values[index].degree = e.target.value;\r\n          } \r\n          else if (e.target.name === \"subject\") {\r\n            values[index].subject = e.target.value;\r\n          }\r\n          else if (e.target.name === \"from\") {\r\n            values[index].from = e.target.value;\r\n          }    \r\n        else {\r\n          values[index].to = e.target.value;\r\n        }\r\n    \r\n        setEducation(values);\r\n    }\r\n\r\n    const handleInputChangeExp = (index,e) => {\r\n      const values = [...experience];\r\n      if (e.target.name === \"company\") {\r\n        values[index].company = e.target.value;\r\n      } \r\n      else if (e.target.name === \"city\") {\r\n          values[index].city = e.target.value;\r\n        } \r\n        else if (e.target.name === \"role\") {\r\n          values[index].role = e.target.value;\r\n        } \r\n        else if (e.target.name === \"from\") {\r\n          values[index].from = e.target.value;\r\n        }    \r\n      else {\r\n        values[index].to = e.target.value;\r\n      }\r\n  \r\n      setExperience(values);\r\n  }\r\n    const handleAddFieldsExp = (e) =>{\r\n        let value = [...experience];\r\n        value.push({company:\"\", role: \"\", city: \"\", from:\"\", to:\"\"});\r\n        setExperience(value);\r\n    }\r\n\r\n    const handleDeleteFieldsExp = (e, index) =>{\r\n        console.log(index);\r\n        const value = [...experience];\r\n        value.splice(index,1);\r\n        setExperience(value);\r\n    }\r\n    const handleAddFieldsEdu = (e) =>{\r\n      let value = [...education];\r\n      value.push({university:\"\", degree: \"\", subject: \"\", city: \"\", from:\"\", to:\"\"});\r\n      setEducation(value);\r\n  }\r\n\r\n  const handleDeleteFieldsEdu = (e, index) =>{\r\n      console.log(index);\r\n      const value = [...education];\r\n      if(index !== 0)\r\n      value.splice(index,1);\r\n      setEducation(value);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"component-container\">\r\n          <div className=\"form-container\">\r\n            <h1 className=\"heading\"> General Information </h1>\r\n            <Form>\r\n              {\r\n                  generalInfo.map((item,index)=> {\r\n                    return(\r\n                    <Fragment key={`${item}~${index}`}>\r\n      \r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Control\r\n                                type=\"text\" \r\n                                name=\"firstname\"\r\n                                placeholder=\"First name\" \r\n                                value={item.firstName}  \r\n                                onChange = { e =>  handleInputChangeGen(index,e)}\r\n                                className=\"input\"\r\n                                />\r\n                          </Col>\r\n                      \r\n                          <Col>\r\n                            <Form.Control\r\n                                type=\"text\" \r\n                                name=\"lastname\"\r\n                                placeholder=\"Last name\" \r\n                                value={item.lastName}  \r\n                                onChange = { e =>  handleInputChangeGen(index,e)}\r\n                                className=\"input\"\r\n                                />\r\n                          </Col>\r\n                        </Row>\r\n                        <Row>\r\n                          <Form.Control\r\n                              type=\"text\" \r\n                              name=\"role\"\r\n                              placeholder=\"Role\" \r\n                              value={item.role}  \r\n                              onChange = { e =>  handleInputChangeGen(index,e)}\r\n                              className=\"input\"\r\n                              />\r\n                        </Row>\r\n                        <Row>\r\n                          <Form.Control\r\n                              type=\"email\" \r\n                              name=\"email\"\r\n                              placeholder=\"Email\" \r\n                              value={item.email}\r\n                              onChange = { e =>  handleInputChangeGen(index,e)}\r\n                              className=\"input\"\r\n                              />\r\n                        </Row>\r\n                        <Row>\r\n                          <Col>\r\n                            <Form.Control\r\n                                type=\"tel\" \r\n                                name=\"number\"\r\n                                placeholder=\"Phone\" \r\n                                value={item.phone} \r\n                                onChange = { e =>  handleInputChangeGen(index,e)} \r\n                                className=\"input\"\r\n                                />\r\n                          </Col>\r\n\r\n                          <Col>\r\n                            <Form.Control\r\n                                type=\"text\" \r\n                                name=\"location\"\r\n                                placeholder=\"Location\" \r\n                                value={item.location}  \r\n                                onChange = { e =>  handleInputChangeGen(index,e)}\r\n                                className=\"input\"\r\n                                />\r\n                          </Col>\r\n                        </Row>\r\n                    </Fragment>\r\n                  );\r\n                })\r\n              }\r\n            </Form>\r\n            </div>\r\n        \r\n            <div className=\"form-container\">\r\n                <h1 className=\"heading\"> Education </h1>\r\n                <Form>\r\n                  {\r\n                      education.map((item,index)=> {\r\n                        return (\r\n                        <Fragment className=\"education-fragment\" key={`${item}~${index}`}>\r\n                            <Row>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"university\"\r\n                                  placeholder=\"University\" \r\n                                  value={item.university}  \r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Row>\r\n                            <Row>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"city\"\r\n                                  placeholder=\"City\" \r\n                                  value={item.city}  \r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Row>\r\n                            <Row>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"degree\"\r\n                                  placeholder=\"Degree\" \r\n                                  value={item.degree}  \r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Row>\r\n                            <Row>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"subject\"\r\n                                  placeholder=\"Subject\" \r\n                                  value={item.subject}\r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"from\"\r\n                                  placeholder=\"From\" \r\n                                  value={item.from} \r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)} \r\n                                  className=\"input\"\r\n                                  />\r\n                                  </Col>\r\n                                  <Col>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"to\"\r\n                                  placeholder=\"To\" \r\n                                  value={item.to}  \r\n                                  onChange = { e =>  handleInputChangeEdu(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Col>\r\n                            </Row>\r\n                            <Button variant=\"danger\" onClick={() => handleDeleteFieldsEdu(index)}>Delete</Button>\r\n                        </Fragment>\r\n                      );\r\n                      })\r\n                  }\r\n                </Form>\r\n                <Button onClick={() => handleAddFieldsEdu()}>Add</Button>\r\n            </div>\r\n        <div className=\"form-container\">\r\n          <h1 className=\"heading\"> Experience </h1>\r\n                <Form>\r\n                  {\r\n                      experience.map((item,index)=> (\r\n                        <Fragment key={`${item}~${index}`}>\r\n                            <Row>\r\n                              <Col>\r\n                                <Form.Control\r\n                                    type=\"text\" \r\n                                    name=\"company\"\r\n                                    placeholder=\"Company\" \r\n                                    value={item.company}  \r\n                                    onChange = { e =>  handleInputChangeExp(index,e)}\r\n                                    className=\"input\"\r\n                                    />\r\n                              </Col>\r\n                          \r\n                              <Col>\r\n                                <Form.Control\r\n                                    type=\"text\" \r\n                                    name=\"role\"\r\n                                    placeholder=\"Role\" \r\n                                    value={item.role}  \r\n                                    onChange = { e =>  handleInputChangeExp(index,e)}\r\n                                    className=\"input\"\r\n                                    />\r\n                              </Col>\r\n                            </Row>\r\n                            <Row>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"city\"\r\n                                  placeholder=\"City\" \r\n                                  value={item.city}  \r\n                                  onChange = { e =>  handleInputChangeExp(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Row>\r\n                            <Row>\r\n                                <Col>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"from\"\r\n                                  placeholder=\"From\" \r\n                                  value={item.from} \r\n                                  onChange = { e =>  handleInputChangeExp(index,e)} \r\n                                  className=\"input\"\r\n                                  />\r\n                                  </Col>\r\n                                  <Col>\r\n                              <Form.Control\r\n                                  type=\"text\" \r\n                                  name=\"to\"\r\n                                  placeholder=\"To\" \r\n                                  value={item.to}  \r\n                                  onChange = { e =>  handleInputChangeExp(index,e)}\r\n                                  className=\"input\"\r\n                                  />\r\n                            </Col>\r\n                            </Row>\r\n                            <Button variant=\"danger\" onClick={() => handleDeleteFieldsExp(index)}>Delete</Button>\r\n                        </Fragment>\r\n                      ))\r\n                  }\r\n                </Form>\r\n            <Button onClick={() => handleAddFieldsExp()}>Add</Button>\r\n            </div>\r\n        </div>\r\n    <div className=\"preview-container\">\r\n      <Preview generalInfo = {generalInfo} education = {education} experience = {experience}/>\r\n    </div>\r\n</div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}